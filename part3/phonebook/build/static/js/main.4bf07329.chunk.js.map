{"version":3,"sources":["services/persons.js","App.js","index.js"],"names":["baseUrl","personsService","getAll","axios","get","then","response","data","create","newObject","post","update","id","put","remove","delete","Notification","message","style","color","background","fontSize","borderStyle","borderRadius","padding","marginBottom","Filter","eventHandler","onChange","PersonForm","formEventHandler","nameEventHandler","numberEventHandler","nameValue","numberValue","onSubmit","value","type","Person","persons","deletePersonHandler","map","p","name","number","onClick","App","useState","setPersons","newName","setNewName","newNumber","setNewNumber","newNameFilter","setNewNameFilter","setMessage","useEffect","event","target","preventDefault","includes","window","confirm","existingPerson","filter","updatedExistingPerson","returnedPerson","updatedPersons","concat","setTimeout","catch","error","newId","Math","max","newPerson","toLowerCase","responseData","x","console","log","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4bf07329.chunk.js","sourcesContent":["import axios from 'axios'\n\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    return request.then(response => response.data)\n}\n\nconst create = newObject => {\n    const request = axios.post(baseUrl, newObject)\n    return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\n    return request.then(response => response.data)\n}\n\nconst remove = id => {\n    const request = axios.delete(`${baseUrl}/${id}`)\n    return request.then(response => response.data)\n}\n\nconst personsService = {\n    getAll,\n    create,\n    update,\n    remove\n}\n\nexport default personsService\n","import React, { useState, useEffect } from 'react'\nimport personsService from './services/persons'\n\n\nconst Notification = ({ message }) => {\n  if (message === null) {\n    return null\n  }\n\n  const notifStyle = {\n    color: 'red',\n    background: 'lightgrey',\n    fontSize: '20px',\n    borderStyle: 'solid',\n    borderRadius: '5px',\n    padding: '10px',\n    marginBottom: '10px'\n  }\n\n  return (\n    <div style={notifStyle}>\n      {message}\n    </div>\n  )\n}\n\nconst Filter = ({eventHandler}) => (\n  <div>\n  filter shown with <input onChange={eventHandler}/>\n  </div>\n)\n\nconst PersonForm = ({formEventHandler, nameEventHandler, numberEventHandler, nameValue, numberValue}) => (\n  <form onSubmit={formEventHandler}>\n    <div>\n      name: <input value={nameValue} onChange={nameEventHandler} />\n    </div>\n    <div>\n      number: <input value={numberValue} onChange={numberEventHandler} />\n    </div>\n    <div>\n      <button type=\"submit\">add</button>\n    </div>\n  </form>\n)\n\nconst Person = ({persons, deletePersonHandler}) => {\n  return (\n    <>\n    {persons.map(p => \n              <div key={p.name}>\n                {p.name} {p.number}\n                <button onClick={() => deletePersonHandler(p.id)}>delete</button>\n              </div>\n            )\n    }\n    </>\n  )\n}\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([])\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ newNameFilter, setNewNameFilter ] = useState('')\n  const [ message, setMessage ] = useState(null)\n\n  useEffect(() => {\n    personsService\n      .getAll()\n      .then(\n        persons => setPersons(persons)\n      )\n  }, [])\n\n  const addPerson = (event) => {\n    event.preventDefault()\n    if (\n      persons.map(p => p.name).includes(newName)\n      && window.confirm(`${newName} already exists in phonebook. Replace the existing phone number?`)\n    ) {\n      \n      const existingPerson = persons.filter(p => p.name === newName)[0]\n      const updatedExistingPerson = {...existingPerson, number: newNumber}\n      personsService\n        .update(existingPerson.id, updatedExistingPerson)\n        .then(returnedPerson => {\n          const updatedPersons = persons.filter(p => p.id !== returnedPerson.id).concat(returnedPerson)\n          setPersons(updatedPersons)\n          setNewName('')\n          setNewNumber('')\n          setMessage(`Updated person ${updatedExistingPerson.name} with new number: ${updatedExistingPerson.number}`)\n          setTimeout(() => {setMessage(null)}, 5000)\n        })\n        .catch(error => {\n          setPersons([...persons.filter(p => p.name !== existingPerson.name)])\n          setMessage(`Information of ${existingPerson.name} has already been removed from server.`)\n          setTimeout(() => {setMessage(null)}, 5000)\n        })\n    }\n    else {\n      const newId = Math.max(...persons.map(p => p.id)) + 1\n      const newPerson = {name: newName, number: newNumber, id: newId}\n      personsService\n        .create(newPerson)\n        .then(returnedPerson => {\n          setPersons(persons.concat(newPerson))\n          setNewName('')\n          setNewNumber('')\n          setMessage(`Added person ${newPerson.name} with number: ${newPerson.number}`)\n          setTimeout(() => {setMessage(null)}, 5000)\n        })\n    }\n  }\n\n  const deletePerson = (id) => {\n    if (window.confirm(\"Are you sure?\")) {\n      personsService\n        .remove(id)\n        .then((responseData) => {\n          const updatedPersons = [...persons].filter(x => x.id !== id)\n          setPersons(updatedPersons)\n          console.log(`Deleted person with ID ${id} from database.`)\n        })\n    } else {\n      setMessage(`User cancelled deletion.`)\n      setTimeout(() => {setMessage(null)}, 5000)\n    }\n  }\n\n  const handleNameChange = (event) => setNewName(event.target.value)\n  const handleNumberChange = (event) => setNewNumber(event.target.value)\n  const handleFilterChange = (event) => setNewNameFilter(event.target.value)\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={message}/>\n      <Filter eventHandler={handleFilterChange} />\n      <h3>add a new</h3>\n      <PersonForm formEventHandler={addPerson}\n                  nameEventHandler={handleNameChange}\n                  numberEventHandler={handleNumberChange}\n                  nameValue={newName}\n                  numberValue={newNumber}\n      />\n      <h3>Numbers</h3>\n      <Person persons={persons.filter(\n                        p => p.name.toLowerCase().includes(newNameFilter.toLowerCase()))\n                      }\n              deletePersonHandler={deletePerson}\n      />\n\n    </div>\n  )\n}\n\nexport default App\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}